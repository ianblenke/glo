@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Overriding material dark background colors
$dark-theme-background: (
  status-bar: black,
  app-bar:    map_get($mat-blue-grey, 900),
  background: #303030,
  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX
  card:       map_get($mat-blue-grey, 800),
  dialog:     map_get($mat-blue-grey, 800),
  disabled-button: rgba(white, 0.12),
  raised-button: map-get($mat-blue-grey, 800),
  focused-button: $light-focused,
  selected-button: map_get($mat-blue-grey, 900),
  selected-disabled-button: map_get($mat-blue-grey, 800),
  disabled-button-toggle: black,
  unselected-chip: map_get($mat-blue-grey, 700),
  disabled-list-option: black,
);

@function dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: true,
    foreground: $mat-dark-theme-foreground,
    background: $dark-theme-background,
  );
}

// Our actual theme

$glo-primary: mat-palette($mat-blue-gray, 600);
$glo-accent:  mat-palette($mat-light-blue, 500, A100, A700);

// The warn palette is optional (defaults to red).
$glo-warn:    mat-palette($mat-red);


// Create the theme object (a Sass map containing all of the palettes).
$glo-theme: dark-theme($glo-primary, $glo-accent, $glo-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($glo-theme);